######################################################
# rulesets make it easier to target this output
######################################################
module(load="mmjsonparse")
module(load="omkafka")

template(name="syslog2json" type="list") {
    constant(value="{")
    constant(value="\"@timestamp\":\"")		property(name="timegenerated" dateFormat="rfc3339")
    constant(value="\",\"host\":\"")			property(name="hostname")
    constant(value="\",\"syslog_program\":\"")	property(name="programname" format="json")
    constant(value="\",\"message\":\"")         property(name="msg" format="json")
    constant(value="\",\"username\":\"")        property(name="$!usr!username")
    constant(value="\",\"src_ip\":\"")          property(name="$!usr!ipAddr" format="json")
    constant(value="\"}\n")
}


######################################################
# Match ruleset based syslogtag
######################################################
if ($programname == 'openvpn') and ($msg contains "Peer Connection Initiated") then {
    action(type="mmjsonparse" cookie="")

    # Extract IP address
    set $!usr!ipAddrTemp = field($msg, 32, 2);
    set $!usr!ipAddr = field($!usr!ipAddrTemp, ":", 1);

    # Extract username
    set $!usr!usernameTemp = field($msg, 32, 3);
    set $!usr!username = substring($!usr!usernameTemp, 1, strlen($!usr!usernameTemp) - 2 );

    # Send log to Kafka
    action(
        type="omkafka"
        broker=["kafka:39092"]
        topic="vpn-log-raw"
        template="syslog2json"
    )
    stop
}