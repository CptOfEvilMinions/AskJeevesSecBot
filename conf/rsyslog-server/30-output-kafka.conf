######################################################
# rulesets make it easier to target this output
######################################################
module(load="mmjsonparse")
module(load="mmdblookup" )

template(
    name="openvpn-dyn"
    type="string"
    string="/tmp/openvpn.log"
)

# template (
#     name="openvpn-temp"
#     type="string"
#     string="%msg%\n"
# )

# template (
#     name="json" 
#     type="string" 
#     #string="%TIMESTAMP:::date-rfc3339% %$!usr!ipAddr%%$!usr!username%\n%msg%\n"
#     string="%TIMESTAMP:::date-rfc3339% %$!usr!username%\n%msg%\n"
# ) 

template(name="json" type="list") {
    constant(value="{")
    constant(value="\"@version\":\"1")
    constant(value="\",\"@timestamp\":\"")		property(name="timegenerated" dateFormat="rfc3339")
    constant(value="\",\"host\":\"")			property(name="hostname")
    constant(value="\",\"syslog_program\":\"")	property(name="programname" format="json")
    constant(value="\",\"message\":\"")         property(name="msg" format="json")
    constant(value="\",\"username\":\"")        property(name="$!usr!username")
    constant(value="\",\"src_ip\":\"")          property(name="$!usr!ipAddr" format="json")
    constant(value="\",\"src_geoip\":{")        property(name="$!src_geo" position.from="2")
    constant(value="}\n")
}


######################################################
# Match ruleset based syslogtag
######################################################
if ($programname == 'openvpn') and ($msg contains "Peer Connection Initiated") then {
    action(type="mmjsonparse" cookie="")

    # Extract IP address
    set $!usr!ipAddrTemp = field($msg, 32, 2);
    set $!usr!ipAddr = field($!usr!ipAddrTemp, ":", 1);


    # Extract username
    set $!usr!usernameTemp = field($msg, 32, 3);
    set $!usr!username = substring($!usr!usernameTemp, 1, strlen($!usr!usernameTemp) - 2 );

    # action ( 
    #     type="mmdblookup" 
    #     mmdbfile="/etc/rsyslog.d/GeoLite2-City.mmdb"
    #     key="!usr!ipAddr" 
    #     fields=[":timezone:!location!time_zone",
    #             ":latitude:!location!latitude",
    #             ":longitude:!location!longitude",
    #             ":dma_code:!location!metro_code",
    #             ":city_name:!names!en",
    #             ":continent_code:!continent!code",
    #             ":country_code2:!country!iso_code",
    #             ":country_code3:!country!iso_code",
    #             ":country_name:!country!names!en",
    #             ":postal_code:!postal!code",
    #             ":region_code:!subdivisions!iso_code",
    #             ":region_name:!subdivisions!names!en"
    #     ]
    # )

    # # Add IP to src_geo object
    # set $!src_geo!ip = $!usr!ipAddr;

    action(
        type="omfile"
        dynafile="openvpn-dyn"
        template="json"
    )


#   action(
#       type="omkafka"
#       broker=["kafka:39092"]
#       dynatopic="on"
#       topic="openvpn-topic-template"
#       template="openvpn-msg-template"
#   )

    stop
}